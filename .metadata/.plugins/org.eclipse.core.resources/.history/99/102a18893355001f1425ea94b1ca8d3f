package com.formacionbdi.springboot.app.productos.controllers;

import java.util.List;
import java.util.concurrent.TimeUnit;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.formacionbdi.springboot.app.productos.models.service.IProductoService;
import com.formacionbdi.springboot.app.productos.models.entity.Producto;
@RestController
public class ProductoController {
	
	@Autowired
	private IProductoService productoService;
	
	//Creamos nuestros eventos handler
	@GetMapping("/listar")
	public List<Producto> listar(){
		return productoService.findAll();
	}
	
	@GetMapping("/ver/{id}")
	public Producto findById(@PathVariable Long id) throws InterruptedException {
		if(id.equals(10L)) {
			throw new IllegalStateException("Producto no encontrado!");
		}
		if(id.equals(7L)) {
			TimeUnit.SECONDS.sleep(5L);
		}
		return productoService.findByID(id);
	}
	
	@PostMapping("/crear")
	@ResponseStatus(HttpStatus.CREATED)
	public Producto crear(@RequestBody Producto producto ) {
		return productoService.save(producto);
	}
	
	@PostMapping("/editar/{id}")
	@ResponseStatus(HttpStatus.CREATED)
	public Producto editar(@RequestBody Producto producto,@PathVariable Long id) {
		Producto productoDb = productoService.findByID(id);
		productoDb.setNombre(productoDb.getNombre());
		productoDb.setPrecio(producto.getPrecio());
		
		return productoDb;
	}
}